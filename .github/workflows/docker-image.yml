name: Docker Image CI

on:
  push:
    tags: [ 'v*.*', 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Generate package-lock.json
        run: npm install --package-lock-only

      - name: Install dependencies
        run: npm ci

      - name: Check project structure
        run: |
          echo "Project structure:"
          ls -la
          echo "Package files:"
          ls -la package*
          echo "Pages directory:"
          ls -la src/pages || true
          echo "App directory:"
          ls -la src/app || true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # 支持 v0.1 这样的双段式版本号
            type=raw,value={{tag}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            # 如果是主分支提交，使用 latest 标签
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            # 如果是其他分支，使用分支名称作为标签
            type=ref,event=branch,enable=${{ !startsWith(github.ref, 'refs/tags/v') }}
            # 如果是 PR，使用 PR 号码作为标签
            type=ref,event=pr
          labels: |
            org.opencontainers.image.title=Homepage IP Info Widget
            org.opencontainers.image.description=A widget for displaying IP information in Homepage
            maintainer=YourGitHubUsername

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max 